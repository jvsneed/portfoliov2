---
import Layout from '../layouts/Layout.astro';

interface Frontmatter {
    title: string;
    date: string;
    excerpt: string;
    tags: string[];
}

interface BlogPost {
    frontmatter: Frontmatter;
    url: string;
}

// Add formatDate function
function formatDate(dateStr: string) {
    return new Date(dateStr).toLocaleDateString('en-US', {
        year: 'numeric',
        month: 'long',
        day: 'numeric'
    });
}

const posts = await import.meta.glob<BlogPost>('./articles/*.md', { eager: true });
const postsArray = Object.values(posts);

// Now TypeScript knows the types
const latestPosts = postsArray
    .sort((a, b) => new Date(b.frontmatter.date).getTime() - new Date(a.frontmatter.date).getTime())
    .slice(0, 2);

const projects = [
{
        title: "Pekin Insurance User Experience Strategy",
        category: "UX Research Strategy ✦ Product Leadership",
        year: "2024",
        description: "Leading a user research strategy to guide Pekin Insurance's digital transformation.",
        image: "/pekin-thumbnail.png",
        slug: "insurance-research-strategy"  
    },
    {
        title: "Creating the Silver Design System and Framework",
        category: "UX Research ✦ Accessibility",
        year: "2024",
        description: "A design system and framework to support senior user needs.",
        image: "/silverdesign-thumb.png",
        slug: "silver-design-framework"  
    },
    {
        title: "Improving healthcare access for blind and low vision users",
        category: "UX Research ✦ Accessibility",
        year: "2024",
        description: "Evaluating the accessibility of ZocDoc with users experiencing blindness and low vision (BLV).",
        image: "/zocdoc-thumbnail.png",
        slug: "zocdoc-accessibility-research"
    },
];
---

<Layout>
    <div class="editorial-container">
        <main class="content-area" data-section="intro">
            <div class="hero-sequence">
                <div class="name-block">
                    <h1 class="hero-title">
                            <span class="text" style="transform: none; opacity: 1;">johanna sneed</span>
                    </h1>
                    <div class="role-tags" style="opacity: 1;">
                        <span class="role-tag">Senior Researcher</span>
                        <span class="divider"></span>
                        <span class="role-tag">Inclusive Design Advocate</span>
                    </div>
                </div>
            </div>
        </main>

        <div class="interaction-layer">
            <div class="magnetic-area" data-strength="0.2"></div>
            <div class="cursor-follower"></div>
        </div>

        <section class="portfolio-preview" data-section="work">
            <div class="preview-header">
                <h2 class="section-title">Selected work</h2>
                <div class="preview-nav">
                    <a href="/portfolio" class="view-all">All portfolio case studies →</a>
                </div>
            </div>
            
            <div class="featured-projects">
                {projects.slice(0, 3).map((project, index) => (
                    <a href={`/case-study/${project.slug}`} class="project-item" data-index={index}>
                        <div class="project-content">
                            <div class="project-meta">
                                <span class="project-category">{project.category}</span>
                            </div>
                            <h3 class="project-title">{project.title}</h3>
                            <p class="project-description">{project.description}</p>
                            <span class="project-link">
                                <span>Go to case study</span>
                                <span class="arrow">→</span>
                            </span>
                        </div>
                        <div class="project-image">
                            <img src={project.image} alt={project.title} />
                        </div>
                    </a>
                ))}
            </div>
        </section>

        <section class="blog-preview" data-section="blog">
            <div class="preview-header">
                <h2 class="section-title">Latest writing</h2>
                <div class="preview-nav">
                    <a href="/writing" class="view-all">All writing →</a>
                </div>
            </div>
            
            <div class="blog-posts">
                {latestPosts.map((post) => (
                    <a href={post.url} class="blog-card">
                        <time class="post-date">{formatDate(post.frontmatter.date)}</time>
                        {/* <div class="post-meta">
                            {post.frontmatter.tags.map((tag: string) => (
                                <span class="post-category">{tag}</span>
                            ))}
                        </div> */}
                        <h3 class="post-title">{post.frontmatter.title}</h3>
                        <p class="post-excerpt">{post.frontmatter.excerpt}</p>
                        <span class="read-more">
                            Read article <span class="arrow">→</span>
                        </span>
                    </a>
                ))}
            </div>
        </section>
    </div>
</Layout>

<style>
    main {
        background-color: white;
        max-width: 100%;
        min-width: 100%;
    }

    .content-area {
        padding: 20vh 0rem;
        max-width: var(--max-width);
        margin: 0 auto;
    }

    .hero-sequence {
        position: relative;
        padding: 0 var(--space-xl);
        max-width: 100%;
        display: flex;
    }

    .name-block {
        margin: 0 auto;
        max-width: 100%; 
        padding:0;
        text-wrap: balance;

    }

    .hero-title {
        /* position: relative; */
        font-family: var(--font-special);
        font-weight: 800;
        margin: 0;
        line-height: 0.9;
    }


    .hero-title span {
        display: block;
        font-size: calc(11vw + .5rem); 
        letter-spacing: -0.06em; 
        color: var(--color-fg); 
    }
    

    @media (min-width:786px) and (max-width:1121px) {
        .hero-title span{
            font-size: calc(11vw + .5rem);
            
        }

    }
    @media (min-width:533px) and (max-width:785px) {
        .hero-title span{
            font-size: calc(11vw + .5rem);
        }
        .role-tags{
            display:flex;
            margin: 0 auto;
            max-width: var(--max-width);
            line-height: 1;
            justify-content: flex-end;
            padding: 0;
        }
    }
        @media (min-width:360px) and (max-width:532px) {
            .name-block,
            .hero-sequence{
                display:flex;
                flex-direction: column;
            justify-content: flex-end;
        }
            .hero-title span{
            font-size: calc(13vw + .5rem);
        }
        .role-tags{
            display:flex;
            margin: 0 auto;
            max-width: var(--max-width);
            line-height: 1;
            justify-content: flex-end;
            padding: 0;
        }
        .role-tag{
            font-size: 1rem;
        }
        .role-tag:not::after {
        margin-left: 0;
    } 

    }
        .role-tag {
            font-size: 1rem;
        }
        /* .role-tag:not(:last-child)::after {
        content: '/';
        margin-left: .5rem;
    }  */
    

    .role-tags {
        margin: 0 0 0 3.5rem;
        display: flex;
        justify-content: flex-end;
        gap: .25rem;
        opacity: 1;
    }

    .role-tag {
        font-family: var(--font-special);
        font-size: calc(1.5vw + .5rem);
        font-weight: 400;
        position: relative;
    }
    .divider {
        color: var(--color-accent);
        font-size: 1.5rem;
        line-height: 0;
    }

    .role-tag:not(:last-child)::after {
        content: '✦';
        margin: 0 .30rem 0 1rem;
        color: var(--color-accent);
    } 


 



    .portfolio-preview {
        padding: var(--space-xl) var(--space-lg);
        margin: 0 auto;
        max-width: var(--max-width);
    }

    .preview-header {
        display: grid;
        grid-template-columns: 1fr auto;
        align-items: center;
        gap: var(--space-lg);
        margin-bottom: var(--space-md);
    }

    @media (max-width:633px) {
        .preview-header {
            display: flex;
            flex-direction: column;
            align-items: flex-start;
            gap: var(--space-sm);
        }

        .view-all{
            padding: 0!important;
        }
        .preview-nav{
            padding:0;
        }
    } 

    .preview-nav {
        display: flex;
        align-items: center;
        gap: var(--space-md);
    }

    .nav-line {
        width: 60px;
        height: 1px;
        background: var(--color-accent);
    }

    .featured-projects {
        display: flex;
        flex-direction: column;
        gap: var(--space-sm);
    }

    .project-item {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 5rem;
        align-items: center;
        padding: var(--space-md) var(--space-lg);
        position: relative;
        border: 1px solid var(--color-border);
        background: rgba(255, 255, 255, 0.8);
        border-radius: var(--curve-sm);
        transition: all 0.4s var(--ease-out-spring);
        transition: all 0.4s var(--ease-out-spring),
        border-color 0.3s ease;
        cursor: none;  
        text-decoration: none; 
        color: inherit; 
        perspective: 1000px;
        max-width:var(--max-width);
        margin: 0 auto;
    }

    .project-item:hover {
        border-color: var(--color-accent);
        transform: translateX(var(--space-sm)) translateZ(20px) rotateX(2deg) rotateY(-2deg);
    }

    .project-content,
    .project-image {
        position: relative;
        z-index: 1;
    }

    .project-meta {
        display: flex;
        align-items: center;
        gap: var (--space-md);
        margin-bottom:0);
    }

    .project-number {
        font-family: var(--font-mono);
        font-size: 0.875rem;
        color: var(--color-accent);
    }

    .project-category {
        font-family: var(--font-mono);
        font-size: .9rem;
        color: var(--color-accent);
    }

    .post-excerpt,
    .project-description {
        margin: 0;
        font-size:1rem;
        line-height: 1.2;
    }
    .project-description{
        max-width: 40ch;

    }

    .project-image {
        position: relative;
        border-radius: var(--curve-sm);
        overflow: hidden;
    }

    .project-image img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        transition: transform 0.6s var(--ease-out-spring);
    }

    .project-link {
        display: flex;
        align-items: center;
        gap: 0.75rem;
        margin-top: var(--space-md);
        font-family: var(--font-mono);
        font-size: 0.875rem;
        color: var(--color-accent);
        text-decoration: none;
        opacity: 0;
        transform: translateX(-10px);
        transition: all 0.3s var(--ease-out-spring);
    }

    .project-item:hover .project-link {
        opacity: 1;
        transform: translateX(0);
    }

    .project-link .arrow {
        transition: transform 0.3s var(--ease-out-spring);
    }

    .project-link:hover .arrow {
        transform: translateX(6px);
    }
    .view-all {
        font-family: var(--font-mono);
        font-size: 1rem;
        color: var(--color-accent);
        text-decoration: none;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        transition: gap 0.3s var (--ease-out-spring);
        padding: 0 var(--space-sm);
        border-radius: var(--curve-sm) ;
    }

    .view-all:hover {
        background-color: var(--color-accent);
        color: white;

    }

    .blog-preview {
        padding: var(--space-xl) var(--space-lg);
        margin: 0 auto;
        max-width: var(--max-width);
    }

    .blog-posts {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: var(--space-sm);

    }

    .blog-card {
        cursor: none;  
        text-decoration: none;  
        color: inherit;  
        padding: var(--space-lg);
        border: 1px solid var(--color-border);
        border-radius: var(--curve-sm);
        transition: all 0.3s var(--ease-out-spring);
        background: rgba(255, 255, 255, 0.8);
        transform-style: preserve-3d;
        perspective: 1000px;
    }

    .blog-card:hover {
        border-color: var(--color-accent);
        transform: translateX(1rem) translateZ(20px) rotateX(2deg) rotateY(-2deg);
    }

    .post-date {
        font-family: var(--font-mono);
        font-size: 0.875rem;
        color: var (--color-muted);
        display: block;
        margin-bottom: var(--space-sm);
    }

    .post-meta {
        display: flex;
        flex-wrap: wrap;
        gap: var(--space-xs);
        margin-bottom: var(--space-sm);
    }

    .post-category {
        font-family: var(--font-mono);
        font-size: 0.875rem;
        color: var(--color-accent);
    }

    .post-category:not(:last-child)::after {
        content: '✦';
        margin-left: var(--space-xs);
        color: var(--color-accent);
    }

    .post-excerpt {
        margin: 0;
        margin-bottom: var(--space-md);
        font-size:1rem;
    }

    .read-more {
        display: flex;
        align-items: center;
        gap: 0.75rem;
        margin-top: var(--space-md);
        font-family: var(--font-mono);
        font-size: 0.875rem;
        color: var(--color-accent);
        opacity: 0;
        transform: translateX(-10px);
        transition: all 0.3s var(--ease-out-spring);
    }

    .blog-card:hover .read-more {
        opacity: 1;
        transform: translateX(0);
    }

    .read-more .arrow {
        transition: transform 0.3s var(--ease-out-spring);
    }

    .read-more:hover .arrow {
        transform: translateX(6px);
    }

    .first-name {
        display: inline-block;
    }

    @media (prefers-reduced-motion: reduce) {
        * {
            animation: none !important;
            transition: none !important;
        }
    }


    @media (max-width: 768px) {
        .content-area {
            width: 100%;
            padding: var(--space-xl) 0;
            display:flex;
            justify-content: center;
        }

        .hero-sequence {
            padding: 0 var(--space-sm);
        }

        .hero-decoration {
            width: 60%;
        }

        .hero-sequence{
            display:block;
        }


        .blog-card,
        .project-item{
            padding: var(--space-sm) var(--space-md);
        }

        .portfolio-preview,
        .blog-preview{
            padding: var(--space-sm) var(--space-xs);   
        }
    }
</style>

<script>
    import gsap from 'gsap';
    import { ScrollTrigger } from 'gsap/ScrollTrigger';
    
    gsap.registerPlugin(ScrollTrigger);

    // Add scroll progress indicator
    window.addEventListener('scroll', () => {
        const scrollPercent = (window.scrollY / (document.documentElement.scrollHeight - window.innerHeight)) * 100;
        const progressBar = document.querySelector('.scroll-progress') as HTMLElement;
        progressBar?.style.setProperty('--scroll', `${scrollPercent}%`);
    });

    // Add cursor effect for project cards and blog cards
    const projectCards = document.querySelectorAll('.project-item');
    const blogCards = document.querySelectorAll('.blog-card');
    const cursorText = document.querySelector('.cursor-text') as HTMLDivElement;

    // Project card cursor effect
    projectCards.forEach(card => {
        card.addEventListener('mouseenter', () => {
            if (cursorText) {
                cursorText.textContent = 'Go to case study';
                cursorText.style.opacity = '1';
                cursorText.style.transform = 'translate(-50%, -50%) scale(1)';
            }
        });

        card.addEventListener('mouseleave', () => {
            if (cursorText) {
                cursorText.style.opacity = '0';
                cursorText.style.transform = 'translate(-50%, -50%) scale(0.5)';
            }
        });
    });

    // Blog card cursor effect
    blogCards.forEach(card => {
        card.addEventListener('mouseenter', () => {
            if (cursorText) {
                cursorText.textContent = 'Read article';
                cursorText.style.opacity = '1';
                cursorText.style.transform = 'translate(-50%, -50%) scale(1)';
            }
        });

        card.addEventListener('mouseleave', () => {
            if (cursorText) {
                cursorText.style.opacity = '0';
                cursorText.style.transform = 'translate(-50%, -50%) scale(0.5)';
            }
        });
    });
</script>
