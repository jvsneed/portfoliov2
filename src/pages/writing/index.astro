---
import Layout from '../../layouts/Layout.astro';
const posts = await Astro.glob('./*.md');

// Get unique tags from all posts
const allTags = [...new Set(posts.flatMap(post => post.frontmatter.tags))];
---

<Layout>
    <div class="blog-container">
        <header class="portfolio-header">
            <div class="header-content">
                <h1 class="section-title">Writing</h1>
                <div class="category-tags">
                    <span class="tag active">All</span>
                    {allTags.map(tag => (
                        <span class="tag">{tag}</span>
                    ))}
                </div>
            </div>
        </header>

        <div class="posts-grid">
            {posts.map((post) => (
                <article class="post-card">
                    <time class="post-date">{post.frontmatter.date}</time>
                    <h2 class="post-title">{post.frontmatter.title}</h2>
                    <p class="post-excerpt">{post.frontmatter.excerpt}</p>
                    <div class="post-footer">
                        <div class="tags">
                            {post.frontmatter.tags.map((tag: string) => (
                                <span class="tag">{tag}</span>
                            ))}
                        </div>
                        <a href={post.url} class="read-more">
                            Read Article â†’
                        </a>
                    </div>
                </article>
            ))}
        </div>
    </div>
</Layout>

<style>
    .blog-container {
        padding-top: 8rem;
        max-width: var(--max-width);
        margin: 0 auto;
        padding-inline: var(--space-md);
    }

    .portfolio-header {
        margin-bottom: var(--space-xl);
    }

    .header-content {
        display: flex;
        justify-content: space-between;
        align-items: flex-end;
        padding-bottom: var(--space-lg);
        border-bottom: 1px solid var(--color-border);
    }

    .section-title {
        font-family: var(--font-special);
        font-size: clamp(2.5rem, 5vw, 3.5rem);
        line-height: 1;
        margin: 0;
    }

    .category-tags {
        display: flex;
        gap: var(--space-sm);
        padding-bottom: 0.5rem;
    }

    .tag {
        font-family: var(--font-mono);
        font-size: 0.875rem;
        color: var(--color-muted);
        padding: 0.5rem 1rem;
        border-radius: 2px;
        cursor: pointer;
        transition: all 0.3s var(--ease-out-spring);
        border: 1px solid var(--color-border);
    }

    .tag:hover {
        color: var(--color-fg);
        background: var(--color-surface);
    }

    .tag.active {
        background: var(--color-fg);
        color: var(--color-bg);
        border-color: var(--color-fg);
    }

    .posts-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
        gap: var(--space-xl);
    }

    .post-card {
        padding: var(--space-lg);
        border: 1px solid var(--color-border);
        border-radius: var(--curve-sm);
        transition: all 0.3s var(--ease-out-spring);
    }

    .post-card:hover {
        transform: translateY(-4px);
        border-color: var(--color-accent);
    }

    .post-date {
        font-family: var(--font-mono);
        font-size: 0.875rem;
        color: var(--color-muted);
        margin-bottom: var(--space-xs);
    }

    .post-title {
        font-family: var(--font-special);
        font-size: 1.5rem;
        margin: 0;
        margin-bottom: var(--space-xs);
    }

    .post-excerpt {
        color: var(--color-muted);
        margin: 0;
        margin-bottom: var(--space-md);
    }

    .post-footer {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .tags {
        display: flex;
        gap: var(--space-xs);
    }

    .tag {
        font-family: var(--font-mono);
        font-size: 0.875rem;
        color: var(--color-muted);
        padding: 0.25rem 0.5rem;
        border: 1px solid var(--color-border);
        border-radius: 2px;
    }

    .read-more {
        font-family: var(--font-mono);
        font-size: 0.875rem;
        color: var(--color-accent);
        text-decoration: none;
        transition: color 0.3s var(--ease-out-spring);
    }

    .read-more:hover {
        color: var(--color-fg);
    }

    @media (max-width: 768px) {
        .blog-container {
            padding-top: 6rem;
        }

        .category-tags {
            width: 100%;
            overflow-x: auto;
            padding-bottom: var(--space-sm);
            white-space: nowrap;
            -webkit-overflow-scrolling: touch;
        }

        .posts-grid {
            grid-template-columns: 1fr;
        }

        .post-card {
            margin-inline: calc(var(--space-md) * -1);
            border-radius: 0;
            border-left: none;
            border-right: none;
        }
    }
</style>

<script>
    // Add tag filtering functionality
    const tags = document.querySelectorAll('.tag');
    const posts = document.querySelectorAll('.post-card');

    tags.forEach(tag => {
        tag.addEventListener('click', () => {
            // Update active state
            tags.forEach(t => t.classList.remove('active'));
            tag.classList.add('active');

            // Filter posts
            const filter = tag.textContent;
            posts.forEach(post => {
                if (filter === 'All') {
                    (post as HTMLElement).style.display = 'block';
                    return;
                }
                
                const postTags = Array.from(post.querySelectorAll('.post-footer .tag'))
                    .map(t => t.textContent);
                (post as HTMLElement).style.display = postTags.includes(filter) ? 'block' : 'none';
            });
        });
    });
</script>