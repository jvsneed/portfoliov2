---
import Header from '../components/Header.astro';
import '../styles/global.css';  // Add this import
import '../styles/responsive.css';
const currentPath = Astro.url.pathname;
const links = [
    { path: '/', label: 'Home' },
    { path: '/portfolio', label: 'Portfolio' },
    { path: '/writing', label: 'Writing' },
];
---
<!doctype html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width" />
        <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
        <link rel="preconnect" href="https://fonts.googleapis.com">
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
        <link href="https://fonts.googleapis.com/css2?family=Fraunces:opsz,wght@9..144,400;9..144,500;9..144,600&family=Plus+Jakarta+Sans:wght@400;500;600&family=Space+Mono:wght@400;700&display=swap" rel="stylesheet">
        <script src="https://unpkg.com/split-type"></script>
        <meta name="generator" content={Astro.generator} />
        <title>Johanna Sneed | Digital Product Designer</title>
    </head>
    <body>
        <Header />
        <main class="main-content" role="main" id="main-content">
            <a href="#main-content" class="skip-link">Skip to main content</a>
            <slot />
        </main>
    </body>
</html>

<style is:global>
    @font-face {
        font-family: 'YourFont';
        src: url('/fonts/YourFont-Regular.woff2') format('woff2'),
             url('/fonts/YourFont-Regular.woff') format('woff');
        font-weight: 400;
        font-style: normal;
        font-display: swap;
    }

    @font-face {
        font-family: 'YourFont';
        src: url('/fonts/YourFont-Bold.woff2') format('woff2'),
             url('/fonts/YourFont-Bold.woff') format('woff');
        font-weight: 700;
        font-style: normal;
        font-display: swap;
    }

    @font-face {
        font-family: 'Star Inversion';
        src: url('/fonts/3617-star-inversion-web.woff') format('woff');
        font-weight: normal;
        font-style: normal;
        font-display: swap;
    }

    @font-face {
        font-family: 'Formation';
        src: url('/fonts/3603-formation-web.woff') format('woff');
        font-weight: normal;
        font-style: normal;
        font-display: swap;
    }

    @font-face {
        font-family: 'Karrik';
        src: url('/fonts/Karrik-Regular.woff') format('woff');
        font-weight: normal;
        font-style: normal;
        font-display: swap;
    }

    @font-face {
        font-family: 'Karrik';
        src: url('/fonts/Karrik-Italic.woff') format('woff');
        font-weight: normal;
        font-style: italic;
        font-display: swap;
    }

    :root {
  

    
        /* Shadows and effects */
        --shadow-soft: 0 8px 40px rgba(0, 0, 0, 0.08);
        --shadow-pop: 0 12px 32px rgba(255, 107, 78, 0.2);
        --blur-light: blur(12px);
       
        
        /* Spacing and layout */
        --curve-sm: 4px;
        --curve-md: 12px;
        --curve-lg: 24px;

        /* Container sizes */
        --container-width: min(1200px, 95%);
        --container-padding: max(2.5rem, 5vw);

        /* New Gradients */
        --gradient-warm: linear-gradient(
            135deg,
            var(--color-coral) 0%,
            var(--color-peach) 100%
        );
        --gradient-cool: linear-gradient(
            135deg,
            var(--color-teal) 0%,
            color-mix(in srgb, var(--color-teal) 70%, white) 100%
        );
        
      
        /* New Animations */
        --ease-out-soft: cubic-bezier(0.33, 1, 0.68, 1);
        --ease-out-spring: cubic-bezier(0.33, 1.4, 0.68, 1);
        --duration-short: 0.2s;
        --duration-medium: 0.4s;
        --duration-long: 0.8s;

        
        /* Spacing */
        --space-unit: 0.5rem;
        --space-xs: calc(var(--space-unit) * 2);
        --space-sm: calc(var(--space-unit) * 3);
        --space-md: calc(var(--space-unit) * 5);
        --space-lg: calc(var(--space-unit) * 8);
        --space-xl: calc(var(--space-unit) * 13);
        
        /* Misc */
        --border-radius: 12px;
        --max-width: 72rem;

    

        /* Mouse interaction variables */
        --cursor-size: 20px;
        --cursor-hover-size: 40px;
        --cursor-color: var(--color-accent);


        /* Updated sophisticated color palette */
        --color-bg: #f6f5f3;  /* Warm off-white */
        --color-fg: #2C2C2C;  /* Soft charcoal */
        --color-accent: #FF4444; /* Terracotta */
        --color-muted: #666666;
        --color-surface: #FFFFFF;
        --color-surface-hover: #E9E6E0; /* Slightly darker than bg */
        --color-border: rgba(0,0,0,0.08);
        
        /* Remove dark mode overrides since we want consistent colors */
        @media (prefers-color-scheme: dark) {
            :root {
                /* Keep the same colors as light mode */
            }
        }
    }

    /* Menu open state */
    body.menu-open {
        overflow: hidden;
        position: fixed;
        width: 100%;
    }

    .main-content {
        position: relative;
        min-height: 100vh;
        width: 100%;
        transition: transform 0.3s var(--ease-out-spring);
    }

    /* Update menu open state to not hide content on desktop */
    @media (min-width: 769px) {
        body.menu-open .main-content {
            transform: none;
            pointer-events: all;
        }
    }

    @media (max-width: 768px) {
        body.menu-open .main-content {
            transform: translateX(-100%);
            pointer-events: none;
        }
    }

    /* Custom cursor styles */
    body {
        cursor: auto; /* Reset to default cursor */
        background: var(--color-cream);
        color: var(--color-ink);
        background: var(--color-bg);
        color: var(--color-fg);
    }

 

    /* Remove hover states related to cursor */
    @media (prefers-color-scheme: dark) {
        :root {
            --text-primary: #FFFFFF;
            --text-secondary: #AAAAAA;
            --bg-light: #0A0A0A;
            --bg-dark: #111111;

            --color-paper: #121212;
            --color-ink: #FFFCF8;
            --gradient-subtle: linear-gradient(to right,
                var(--color-paper),
                #1A1818,
                var(--color-paper));

            --color-bg: #161618;
            --color-fg: #FAFAFA;
            --color-accent: #60A5FA;
            --color-muted: #A1A1AA;
            --color-surface: #1E1E20;
            --color-surface-alt: #27272A;
        }
    }

    html {
        font-family: 'Inter', sans-serif;
        background: var(--bg-light);
        color: var(--text-primary);
        scroll-behavior: smooth;
    }

    h1, h2, h3, h4 {
        font-family: 'Karrik', sans-serif;
        font-weight: 600;
        letter-spacing: -0.02em;
    }

    ::selection {
        background: var(--accent);
        color: white;
    }

    /* Add smooth transitions for dark mode */
    body {
        transition: background-color 0.3s ease, color 0.3s ease;
        margin: 0;
        min-height: 100vh;
        line-height: 1.65;
        background: var(--color-canvas);
        color: var(--color-paper);
        font-family: var(--font-body);
        -webkit-font-smoothing: antialiased;
        overflow-x: hidden;
        position: relative;
        background: var(--color-bg);
        color: var(--color-fg);
    }

    body::before {
        content: '';
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: 
            radial-gradient(circle at 0% 0%, rgba(255, 61, 0, 0.05) 0%, transparent 50%),
            radial-gradient(circle at 100% 100%, rgba(0, 102, 255, 0.05) 0%, transparent 50%);
        opacity: 0.03;
        z-index: -1;
        background: 
            radial-gradient(circle at 0% 0%, rgba(255, 77, 0, 0.05) 0%, transparent 50%),
            radial-gradient(circle at 100% 100%, rgba(255, 149, 0, 0.05) 0%, transparent 50%);
    }

    main {
        padding: 0;  /* Remove default padding */
        width: 100%;
        max-width: 100%;
        margin: 0;
        overflow-x: hidden;
        animation: fadeIn 0.6s var(--ease-out-spring);
    }

    @media (max-width: 768px) {
        :root {
            --grid-max: 100%;
        }
        body {
            padding-top: 4rem; /* Match header height */
            width: 100%;
            overflow-x: hidden;
        }

        .container {
            width: 100%;
            padding-inline: var(--space-md);
        }
    }

    /* Hide scrollbar but keep functionality */
    ::-webkit-scrollbar {
        width: 8px;
        height: 8px;
    }

    ::-webkit-scrollbar-thumb {
        background: var(--text-secondary);
        border-radius: 4px;
    }

    ::-webkit-scrollbar-track {
        background: transparent;
    }


    /* Smooth scrolling and transitions */
    * {
        transition: background-color 0.3s ease, 
                    color 0.3s ease,
                    transform 0.3s ease;
    }

    /* Selection styling */
    ::selection {
        background: var(--color-pop);
        color: var(--color-paper);
    }

    .split-text {
        opacity: 0;
        transform: translateY(20px);
    }

    .split-text.reveal {
        opacity: 1;
        transform: translateY(0);
        transition: all var(--duration-medium) var(--ease-out-spring);
    }

    .hover-lift {
        transition: transform var(--duration-short) var(--ease-out-spring);
    }

    .hover-lift:hover {
        transform: translateY(-4px);
    }

    @media (prefers-reduced-motion: reduce) {
        :root {
            --duration-short: 0s;
            --duration-medium: 0s;
            --duration-long: 0s;
        }
    }

    @keyframes fadeIn {
        from { opacity: 0; transform: translateY(10px); }
        to { opacity: 1; transform: translateY(0); }
    }

    .link-hover {
        position: relative;
        overflow: hidden;
    }

    .link-hover::after {
        content: '';
        position: absolute;
        bottom: 0;
        left: 0;
        width: 100%;
        height: 1px;
        background: currentColor;
        transform: scaleX(0);
        transform-origin: right;
        transition: transform 0.3s var (--ease-out-spring);
    }

    .link-hover:hover::after {
        transform: scaleX(1);
        transform-origin: left;
    }

    /* Improved focus styles */
    a:focus-visible,
    button:focus-visible {
        outline: 2px solid var(--color-accent);
        outline-offset: 2px;
        border-radius: 2px;
    }

    .skip-link {
        position: absolute;
        top: -100px;
        left: 50%;
        transform: translateX(-50%);
        background: var(--color-accent);
        color: white;
        padding: 0.5rem 1rem;
        border-radius: 0 0 4px 4px;
        z-index: 1001;
        transition: top 0.3s;
    }

    .skip-link:focus {
        top: 0;
    }

    /* Fluid spacing utilities */
    .content-area {
        padding: clamp(4rem, 8vw, 10rem) clamp(1rem, 5vw, 4rem);
    }

    /* Custom cursor text styles */
    .cursor-text {
        width: 120px;  /* Increased from 100px */
        height: 120px; /* Increased from 100px */
        padding: 1.5rem; /* Added padding */
        text-align: center; /* Ensure text is centered */
        line-height: 1.2; /* Improve text wrapping */
    }

    /* Larger cursor for project cards */
    .project-item .cursor-text {
        width: 120px;
        height: 120px;
        padding: 1.5rem;
        font-size: 0.875rem;
    }
</style>

<script>
    // Update the import to use the correct package
    import { inView } from '@motionone/dom';
    
    // Type declaration for SplitType
    declare const SplitType: any;

    document.addEventListener('DOMContentLoaded', () => {
        // Initialize text splitting
        if (typeof SplitType !== 'undefined') {
            const splitText = document.querySelectorAll('.split-text');
            splitText.forEach(text => {
                new SplitType(text, { types: 'words' });
            });
        }

        // Scroll animations
        const sections = document.querySelectorAll('section');
        sections.forEach(section => {
            inView(section, ({ target }) => {
                target.classList.add('reveal');
            });
        });
    });
</script>
