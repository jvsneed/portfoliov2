---
import Layout from './Layout.astro';
import GardenBadge from '../components/GardenBadge.astro';
const { frontmatter } = Astro.props;
const { title, date, tags } = frontmatter;
const formattedTags = tags.map(tag => tag.toLowerCase());
---

<Layout>
    <article class="blog-post">
        <div class="content-wrapper">
            <main class="post-content">
                <header class="post-header">
                    <h1>{title}</h1>
                    <time>{date}</time>

                </header>
                <div class="post-body">
                    <slot />
                </div>
            </main>

            <aside class="post-sidebar">
                <div class="sidebar-section">
                    <h2>Tags</h2>
                    <div class="tags-list">
                        {formattedTags.map(tag => (
                            <a href={`/writing?tag=${tag}`} class="tag">
                                {tag}
                            </a>
                        ))}
                    </div>
                </div>
            </aside>
        </div>
    </article>
    <GardenBadge />

</Layout>

<style>

/* :global(h2) {
        font-family: var(--font-special);
        font-size: 2rem;
        line-height: 1;
        margin: 0;
        font-weight: 600;
        padding-top: 1rem;

} */

:global(h3) {
    font-family: var(--font-special);
    font-size: 1.5rem;
    line-height: 1;
    margin: 0;
    font-weight: 300;
    padding-top: 1rem;
}

:global(h4) {
    font-family: var(--font-special);
    font-size: 1rem;
    line-height: 1;
    margin: 0;
    font-weight: 600;
}

:global(h5) {
    font-family: var(--font-special);
    font-size: 1rem;
    line-height: 1;
    margin: 0;
    font-weight: 400;
    color:var(--color-accent);
}

h6 {
    font-family: var(--font-special);
    font-size: clamp(2rem, 1.25rem, 3rem);
    line-height: 1;
    margin: 0;
    font-weight: 600;
}


p{
    font-family: var(--font-sans);
    font-weight: 400;
    line-height: 1.7;
}

    .blog-post {
        max-width: var(--max-width);
        margin: 0 auto;
        padding: var(--space-xl) var(--space-xl);
    }

    .content-wrapper {
        display: grid;
        grid-template-columns: 2fr 1fr;
        gap: var(--space-lg);
    }
/* 
    .post-content {
        max-width: 65ch;
    } */

    .post-header {
        margin-bottom: var(--space-md);
    }
    .post-header h1{
        font-size: 2.5rem;
        line-height: 1.1;
        margin-bottom:var(--space-sm);
    }




    :global(.post-body h2) {
    font-size: 2rem;
    margin-top: var(--space-md);
    font-weight: 700;
  }

    .post-sidebar {
        position: sticky;
        top: 5rem;
        height: fit-content;
    }

    .sidebar-section {
        padding: var(--space-md);
        background: var(--color-surface);
        border: 1px solid var(--color-border);
        border-radius: var(--curve-sm);
        margin-bottom: var(--space-lg);
    } 

    .sidebar-section h2 {
        font-size: 0.875rem;
        font-family: var(--font-mono);
        color: var(--color-muted);
        margin-bottom: var(--space-sm);
    }

    .tags-list {
        display: flex;
        flex-wrap: wrap;
        gap: var(--space-xs);
    }

    .tag {
        font-family: var(--font-mono);
        font-size: 0.875rem;
        color: var(--color-muted);
        padding: 0.5rem 1rem;
        border-radius: 2px;
        text-decoration: none;
        transition: all 0.3s var(--ease-out-spring);
        border: 1px solid var(--color-border);
        background: var(--color-surface);
    }

    .tag:hover {
        background: var(--color-accent);
        color: white;
        border-color: var(--color-accent);
    }

    .related-posts {
        display: flex;
        flex-direction: column;
        gap: var(--space-md);
    }

    .related-post {
        text-decoration: none;
        color: inherit;
        transition: transform 0.3s var(--ease-out-spring);
    }

    .related-post:hover {
        transform: translateX(var(--space-xs));
    }

    .related-post h3 {
        font-size: rem;
        margin: 0 0 var(--space-xs);
        color: var(--color-fg);
    }

    .related-post p {
        font-size: 0.875rem;
        color: var(--color-muted);
        margin: 0;
    }

    @media (max-width: 938px) {
        .content-wrapper {
            grid-template-columns: 1fr;
        }

        .post-sidebar {
            position: static;
            margin-top: var(--space-xs);
        }
    }

    @media (max-width: 768px) {
        .blog-post{
            padding: var(--space-xl) var(--space-xs);
            max-width: 100%;
        }
        }
    }
</style>

<script>
    // Handle tag clicks
    document.querySelectorAll('.tag').forEach(tag => {
        tag.addEventListener('click', (e) => {
            e.preventDefault();
            const tag = e.currentTarget as HTMLAnchorElement;
            const tagValue = tag.getAttribute('href')?.split('=')[1];
            sessionStorage.setItem('selectedTag', tagValue || '');
            window.location.href = '/writing';
        });
    });
</script>
