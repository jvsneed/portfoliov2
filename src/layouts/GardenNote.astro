---
import Layout from './Layout.astro';
import Breadcrumbs from '../components/Breadcrumbs.astro';

const { frontmatter, url } = Astro.props;
---

<Layout>
    <article class="garden-note">
        <div class="content-wrapper">
            <main class="note-content">
                <header class="note-header">
                    <Breadcrumbs path={url} />

                    <h1>{frontmatter.title}</h1>
                    <time>Last tended {new Date(frontmatter.lastModified).toLocaleDateString()}</time>
                    <!-- <p class="note-description">{frontmatter.description}</p> -->
                </header>
                
                <div class="note-body">
                    <slot />
                </div>

                {frontmatter.connections && frontmatter.connections.length > 0 && (
                    <footer class="note-footer">
                        <h2 class="connections-title">Connected Notes</h2>
                        <div class="connections">
                            {frontmatter.connections.map(connection => (
                                <a href={connection.url} class="connection-card">
                                    <span class="title">{connection.title}</span>
                                    <span class="read-more">Read note <span class="arrow">â†’</span></span>
                                </a>
                            ))}
                        </div>
                    </footer>
                )}
            </main>

            <aside class="note-sidebar">
                <div class="sidebar-section">
                    <h2>Topics</h2>
                    <div class="note-topics">
                        {frontmatter.topics.map(topic => (
                            <span class="topic-tag">{topic}</span>
                        ))}
                    </div>
                </div>
            </aside>
        </div>
    </article>
</Layout>

<style>
   .note-header {
        margin-bottom: var(--space-md);
    }
    .note-header h1{
        font-size: 2.5rem;
        line-height: 1.1;
        margin-bottom:var(--space-sm);
    }
:global(h2) {
        font-family: var(--font-special);
        font-size: 2rem;
        line-height: 1;
        margin: 0;
        font-weight: 600;
        padding-top: 1rem;

}

:global(h3) {
    font-family: var(--font-special);
    font-size: 1.5rem;
    line-height: 1;
    margin: 0;
    font-weight: 300;
    padding-top: 1rem;
}

:global(h4) {
    font-family: var(--font-special);
    font-size: 1rem;
    line-height: 1;
    margin: 0;
    font-weight: 600;
}

:global(h5) {
    font-family: var(--font-special);
    font-size: 1rem;
    line-height: 1;
    margin: 0;
    font-weight: 400;
    color:var(--color-accent);
}

h6 {
    font-family: var(--font-special);
    font-size: clamp(2rem, 1.25rem, 3rem);
    line-height: 1;
    margin: 0;
    font-weight: 600;
}

time{
    font-family: var(--font-mono);
    font-size: 0.875rem;
    color: var(--color-accent);
    margin-bottom: var(--space-sm);
}

p{
    font-family: var(--font-sans);
    font-weight: 400;
    line-height: 1.7;
}
    .garden-note {
        max-width: var(--max-width);
        margin: 0 auto;
        padding: var(--space-xl) var(--space-lg);
    }

    .content-wrapper {
        display: grid;
        grid-template-columns: 2fr 1fr;
        gap: var(--space-lg);
        max-width: var(--max-width);
        margin: 0 auto;
    }

    /* .note-content {
        max-width: 65ch;
    } */


    .note-sidebar {
        position: sticky;
        top: 5rem;
        height: fit-content;
    }

    .sidebar-section {
        padding: var(--space-md);
        background: var(--color-surface);
        border: 1px solid var(--color-border);
        border-radius: var(--curve-sm);
    }

    .sidebar-section h2 {
        font-size: 0.875rem;
        font-family: var(--font-mono);
        color: var(--color-muted);
        margin-bottom: var(--space-sm);
    }

    .tags-list {
        display: flex;
        flex-wrap: wrap;
        gap: var(--space-xs);
    }

    .tag {
        font-family: var(--font-mono);
        font-size: 0.875rem;
        color: var(--color-muted);
        padding: 0.5rem 1rem;
        border-radius: 2px;
        text-decoration: none;
        transition: all 0.3s var(--ease-out-spring);
        border: 1px solid var(--color-border);
        background: var(--color-surface);
    }

    .tag:hover {
        background: var(--color-accent);
        color: white;
        border-color: var(--color-accent);
    }

    @media (max-width: 768px) {
        .content-wrapper {
            grid-template-columns: 1fr;
        }

        .note-sidebar {
            position: static;
            margin-top: var(--space-lg);
        }
    }

    .note-meta {
        display: flex;
        gap: var(--space-xs);
        color: var(--color-muted);
        font-family: var(--font-mono);
        font-size: 0.875rem;
        margin-bottom: var(--space-md);
    }

    .tended-label {
        color: var(--color-accent);
    }

    .note-footer {
        margin-top: var(--space-xl);
        padding-top: var(--space-lg);
        border-top: 1px solid var(--color-border);
    }

    .connections-title {
        font-size: 1.25rem;
        margin-bottom: var(--space-md);
    }

    .connection-card {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: var(--space-md);
        background: var(--color-surface);
        border: 1px solid var(--color-border);
        border-radius: var(--curve-sm);
        text-decoration: none;
        color: inherit;
        margin-bottom: var(--space-sm);
        transition: all 0.3s var(--ease-out-spring);
    }

    .connection-card:hover {
        border-color: var(--color-accent);
        transform: translateX(var(--space-xs));
    }

    .read-more {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        font-family: var(--font-mono);
        font-size: 0.875rem;
        color: var(--color-accent);
        opacity: 0;
        transform: translateX(-10px);
        transition: all 0.3s var(--ease-out-spring);
    }

    .connection-card:hover .read-more {
        opacity: 1;
        transform: translateX(0);
    }
</style>

<script>
    // Handle topic clicks to filter garden
    document.querySelectorAll('.tag').forEach(tag => {
        tag.addEventListener('click', (e) => {
            e.preventDefault();
            const tag = e.currentTarget as HTMLAnchorElement;
            const topicValue = tag.getAttribute('href')?.split('=')[1];
            sessionStorage.setItem('selectedCategory', topicValue || '');
            window.location.href = '/garden';
        });
    });
</script>
